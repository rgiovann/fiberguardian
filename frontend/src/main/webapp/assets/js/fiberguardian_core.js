(function () {
  // Garante que o namespace FiberGuardian exista no escopo global
  window.FiberGuardian = window.FiberGuardian || {};

  // Define o subm√≥dulo CORE
  FiberGuardian.Core = FiberGuardian.Core || {};

  /**
   * Mapeia p√°ginas HTML para seus scripts JS correspondentes.
   * A chave √© o nome da p√°gina (parcial ou completo) e o valor √© o caminho do script associado.
   */
  const pageToScriptMap = {
    "tela_cadastro_recebimento.html": "assets/js/tela_cadastro_recebimento.js",
    "tela_cadastro_usuario.html": "assets/js/tela_cadastro_usuario.js",
    // Ex: 'cadastro_usuario.html': 'assets/js/cadastro_usuario.js'
  };

  /**
   * Carrega dinamicamente uma p√°gina HTML e seu script JS associado.
   *
   * @param {string} pagina - Caminho relativo do HTML a ser carregado.
   */
  FiberGuardian.Core.carregarPagina = function (pagina) {
    fetch(pagina)
      .then((resposta) => {
        if (!resposta.ok) throw new Error("Erro ao carregar a p√°gina.");
        return resposta.text();
      })
      .then((html) => {
        // Injeta o HTML carregado no elemento principal da aplica√ß√£o
        document.getElementById("conteudo-principal").innerHTML = html;

        // Verifica se h√° script associado √† p√°gina
        const scriptPath = pageToScriptMap[pagina];

        if (scriptPath) {
          const script = document.createElement("script");
          script.src = scriptPath;

          // Ap√≥s carregar o script, identifica e inicializa o m√≥dulo JS correto
          script.onload = function () {
            console.log(`‚úÖ Script carregado: ${scriptPath}`);

            /**
             * Transforma 'assets/js/tela_recebimento.js' em 'TelaRecebimento':
             * - Remove o caminho do diret√≥rio
             * - Remove extens√£o '.js'
             * - Substitui underscores por espa√ßo
             * - Capitaliza palavras (camel-case)
             * - Remove espa√ßos
             */
            const nomeModulo = scriptPath
              .replace(/^.*\//, "") // 'tela_recebimento.js'
              .replace(".js", "") // 'tela_recebimento'
              .replace(/_/g, " ") // 'tela recebimento'
              .replace(/(^\w|\s\w)/g, (m) => m.toUpperCase()) // 'Tela Recebimento'
              .replace(/\s+/g, ""); // 'TelaRecebimento'

            console.log(`üîç M√≥dulo identificado: [${nomeModulo}]`);

            // Inicializa o m√≥dulo se estiver corretamente registrado no namespace
            if (
              FiberGuardian[nomeModulo] &&
              typeof FiberGuardian[nomeModulo].init === "function"
            ) {
              console.log(`üöÄ Inicializando m√≥dulo: [${nomeModulo}]`);
              FiberGuardian[nomeModulo].init();
            } else {
              console.warn(
                `‚ö†Ô∏è M√≥dulo [${nomeModulo}] n√£o encontrado ou n√£o possui init().`
              );
            }
          };

          // Anexa dinamicamente o script ao <body>
          document.body.appendChild(script);
        }
      })
      .catch((erro) => {
        console.error("‚ùå Falha ao carregar conte√∫do:", erro);
        document.getElementById("conteudo-principal").innerHTML =
          "<p>Erro ao carregar conte√∫do.</p>";
      });
  };
})();
